version: "3"
services:

 # Database
  db:
    build: ./radar-db
    restart: always
    volumes:
      - data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    container_name: radar-db

# NGINX
  radar-nginx:
    image: nginx:1.20.2
    volumes:
      - ./radar-nginx/reverse.conf:/etc/nginx/templates/reverse.conf.template
    ports:
      - 9998:9998
    environment:
      - CLIENT_BASE=/
      - CLIENT_HOST=radar-client
      - CLIENT_PORT=8080
      - API_BASE=/api
      - API_HOST=radar-api
      - API_PORT=5000

      
    container_name: radar-nginx
    hostname: radar-nginx
    restart: always
  
# Frontend
  radar-client:
    build: ./radar-client
    volumes:
      - ./radar-client/src:/app/src
      - ./radar-nginx/client.conf:/etc/nginx/templates/client.conf.template
    env_file:
      - .env
    container_name: radar-client
    environment:
      - NODE_ENV=production

#   # RabbitMQ
#   radar-rabbit:
#     image: rabbitmq:3.8-management
#     ports:
#       - 15672:15672
#       - 5672:5672
#     restart: always
#     container_name: radar-rabbit
#     environment:
#             - RABBITMQ_DEFAULT_USER=guest
#             - RABBITMQ_DEFAULT_PASS=mypassword
#     hostname: radar-rabbit

  # API 
  radar-api:
    build: ./radar
    ports:
      - "5000:5000"
    command: radar-api
    # uwsgi uwsgi.ini 
    # 
    volumes:
      - ./radar/radar:/radar/radar
      - ./radar/migrations:/radar/migrations
    container_name: radar-api
    environment:
      - BASE_URL=http://radar_api:8080
      - SESSION_TIMEOUT=3600
      - LIVE=False
      - READ_ONLY=False
      - UKRDC_SEARCH_ENABLED=True
      - UKRDC_SEARCH_URL=http://rr-hs-test.northbristol.local:9990/search
      - UKRDC_SEARCH_TIMEOUT=60
      - UKRDC_EXPORTER_URL=http://rr-hs-test.northbristol.local:9990/importandregister
      - UKRDC_EXPORTER_STATE=/tmp/exporter.state
      - SECRET_KEY=SECRET
      - SQLALCHEMY_DATABASE_URI=postgres://radar:password@radar-db/radar
      - DEBUG=True
    depends_on:
      - db
      
#   # Backend Admin
#   radar-admin:
#     build: ./radar
#     ports:
#       - "5002:5002"
#     command: radar-admin
#     volumes:
#       - ./radar/radar:/radar/radar
#     env_file:
#       - .env
#     container_name: radar-admin
#     depends_on:
#       - db

#   # UKRDC Importer
#   ukrdc-importer:
#     build: ./radar
#     ports:
#       - "5003:5003"
#     environment:
#       - FLASK_APP=ukrdc_importer
#     command: flask run
#     volumes:
#       - ./radar/radar:/radar/radar
#     env_file:
#       - .env
#     container_name: ukrdc-importer    
#     depends_on:
#       - db

#   # UKRDC Importer Celery Worker
#   ukrdc-importer-celery-worker:
#     build: ./radar
#     command: python3 -m celery -A app worker -n radar.radar.ukrdc_importer -A radar.ukrdc_importer.worker -Q ukrdc_importer --loglevel WARNING
#     volumes:
#       - ./radar/radar:/radar/radar
#     env_file:
#       - .env
#     container_name: ukrdc-importer-celery-worker  
#     depends_on:
#       - db
#       - radar-rabbit
 
volumes:
  data: